// Generated by Dagger (https://dagger.dev).
package com.example.plazapalm.views.addphotos;

import com.example.plazapalm.datastore.DataStoreUtil;
import com.example.plazapalm.networkcalls.Repository;
import com.example.plazapalm.pref.PreferenceFile;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AddPhotosVM_Factory implements Factory<AddPhotosVM> {
  private final Provider<DataStoreUtil> dataStoreUtilProvider;

  private final Provider<PreferenceFile> prefProvider;

  private final Provider<Repository> repositoryProvider;

  public AddPhotosVM_Factory(Provider<DataStoreUtil> dataStoreUtilProvider,
      Provider<PreferenceFile> prefProvider, Provider<Repository> repositoryProvider) {
    this.dataStoreUtilProvider = dataStoreUtilProvider;
    this.prefProvider = prefProvider;
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public AddPhotosVM get() {
    return newInstance(dataStoreUtilProvider.get(), prefProvider.get(), repositoryProvider.get());
  }

  public static AddPhotosVM_Factory create(Provider<DataStoreUtil> dataStoreUtilProvider,
      Provider<PreferenceFile> prefProvider, Provider<Repository> repositoryProvider) {
    return new AddPhotosVM_Factory(dataStoreUtilProvider, prefProvider, repositoryProvider);
  }

  public static AddPhotosVM newInstance(DataStoreUtil dataStoreUtil, PreferenceFile pref,
      Repository repository) {
    return new AddPhotosVM(dataStoreUtil, pref, repository);
  }
}
