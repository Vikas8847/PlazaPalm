// Generated by Dagger (https://dagger.dev).
package com.example.plazapalm.views.signup;

import com.example.plazapalm.datastore.DataStoreUtil;
import com.example.plazapalm.networkcalls.Repository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SignupVM_Factory implements Factory<SignupVM> {
  private final Provider<Repository> repositoryProvider;

  private final Provider<DataStoreUtil> dataStoreProvider;

  public SignupVM_Factory(Provider<Repository> repositoryProvider,
      Provider<DataStoreUtil> dataStoreProvider) {
    this.repositoryProvider = repositoryProvider;
    this.dataStoreProvider = dataStoreProvider;
  }

  @Override
  public SignupVM get() {
    return newInstance(repositoryProvider.get(), dataStoreProvider.get());
  }

  public static SignupVM_Factory create(Provider<Repository> repositoryProvider,
      Provider<DataStoreUtil> dataStoreProvider) {
    return new SignupVM_Factory(repositoryProvider, dataStoreProvider);
  }

  public static SignupVM newInstance(Repository repository, DataStoreUtil dataStore) {
    return new SignupVM(repository, dataStore);
  }
}
