// Generated by Dagger (https://dagger.dev).
package com.example.plazapalm.views.filter;

import com.example.plazapalm.datastore.DataStoreUtil;
import com.example.plazapalm.pref.PreferenceFile;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FilterFragmentVM_Factory implements Factory<FilterFragmentVM> {
  private final Provider<DataStoreUtil> dataStoreUtilProvider;

  private final Provider<PreferenceFile> prefProvider;

  public FilterFragmentVM_Factory(Provider<DataStoreUtil> dataStoreUtilProvider,
      Provider<PreferenceFile> prefProvider) {
    this.dataStoreUtilProvider = dataStoreUtilProvider;
    this.prefProvider = prefProvider;
  }

  @Override
  public FilterFragmentVM get() {
    return newInstance(dataStoreUtilProvider.get(), prefProvider.get());
  }

  public static FilterFragmentVM_Factory create(Provider<DataStoreUtil> dataStoreUtilProvider,
      Provider<PreferenceFile> prefProvider) {
    return new FilterFragmentVM_Factory(dataStoreUtilProvider, prefProvider);
  }

  public static FilterFragmentVM newInstance(DataStoreUtil dataStoreUtil, PreferenceFile pref) {
    return new FilterFragmentVM(dataStoreUtil, pref);
  }
}
