// Generated by Dagger (https://dagger.dev).
package com.example.plazapalm.networkcalls;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import retrofit2.converter.gson.GsonConverterFactory;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_GsonConverterFactoryFactory implements Factory<GsonConverterFactory> {
  private final NetworkModule module;

  public NetworkModule_GsonConverterFactoryFactory(NetworkModule module) {
    this.module = module;
  }

  @Override
  public GsonConverterFactory get() {
    return gsonConverterFactory(module);
  }

  public static NetworkModule_GsonConverterFactoryFactory create(NetworkModule module) {
    return new NetworkModule_GsonConverterFactoryFactory(module);
  }

  public static GsonConverterFactory gsonConverterFactory(NetworkModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.gsonConverterFactory());
  }
}
